[2024-12-01T13:06:27.418+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-01T13:06:27.474+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: send_csv_to_kafka.send_csv_to_kafka manual__2024-12-01T13:06:21.690931+00:00 [queued]>
[2024-12-01T13:06:27.518+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: send_csv_to_kafka.send_csv_to_kafka manual__2024-12-01T13:06:21.690931+00:00 [queued]>
[2024-12-01T13:06:27.520+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 2
[2024-12-01T13:06:27.624+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): send_csv_to_kafka> on 2024-12-01 13:06:21.690931+00:00
[2024-12-01T13:06:27.648+0000] {standard_task_runner.py:104} INFO - Running: ['airflow', 'tasks', 'run', 'send_csv_to_kafka', 'send_csv_to_kafka', 'manual__2024-12-01T13:06:21.690931+00:00', '--job-id', '46', '--raw', '--subdir', 'DAGS_FOLDER/dag_test.py', '--cfg-path', '/tmp/tmp7wsp_i1o']
[2024-12-01T13:06:27.650+0000] {logging_mixin.py:190} WARNING - /home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py:70 DeprecationWarning: This process (pid=1012) is multi-threaded, use of fork() may lead to deadlocks in the child.
[2024-12-01T13:06:27.654+0000] {standard_task_runner.py:105} INFO - Job 46: Subtask send_csv_to_kafka
[2024-12-01T13:06:27.654+0000] {standard_task_runner.py:72} INFO - Started process 1026 to run task
[2024-12-01T13:06:27.915+0000] {task_command.py:467} INFO - Running <TaskInstance: send_csv_to_kafka.send_csv_to_kafka manual__2024-12-01T13:06:21.690931+00:00 [running]> on host 45770b1a429e
[2024-12-01T13:06:28.244+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='send_csv_to_kafka' AIRFLOW_CTX_TASK_ID='send_csv_to_kafka' AIRFLOW_CTX_EXECUTION_DATE='2024-12-01T13:06:21.690931+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-01T13:06:21.690931+00:00'
[2024-12-01T13:06:28.247+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-01T13:06:28.333+0000] {dag_test.py:42} INFO - Loaded CSV Data:
    Invoice ID Branch       City  ... gross margin percentage gross income Rating
0  750-67-8428      A     Yangon  ...                4.761905      26.1415    9.1
1  226-31-3081      C  Naypyitaw  ...                4.761905       3.8200    9.6
2  631-41-3108      A     Yangon  ...                4.761905      16.2155    7.4
3  123-19-1176      A     Yangon  ...                4.761905      23.2880    8.4
4  373-73-7910      A     Yangon  ...                4.761905      30.2085    5.3

[5 rows x 17 columns]
[2024-12-01T13:06:28.335+0000] {dag_test.py:69} INFO - Row data before serialization: {'invoice_id': '750-67-8428', 'branch': 'A', 'city': 'Yangon', 'customer_type': 'Member', 'gender': 'Female', 'product_line': 'Health and beauty', 'unit_price': 74.69, 'quantity': 7, 'tax_5_percent': 26.1415, 'total': 548.9715, 'date': '1/5/2019', 'time': '13:08', 'payment': 'Ewallet', 'cogs': 522.83, 'gross_margin_percentage': 4.761904762, 'gross_income': 26.1415, 'rating': 9.1, 'id': 'ee8dcfef-953c-49e3-968a-24e172c25835'}
[2024-12-01T13:06:28.356+0000] {dag_test.py:75} ERROR - Error producing message: KafkaError{code=_VALUE_SERIALIZATION,val=-161,str="Schema being registered is incompatible with an earlier schema for subject "test-topic-value", details: [{errorType:'NAME_MISMATCH', description:'The name of the schema has changed (path '/name')', additionalInfo:'expected: com.lambda.kafka.TestRecord'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: INT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {oldSchemaVersion: 2}, {oldSchema: '{"type":"record","name":"TestRecord","namespace":"com.lambda.kafka","fields":[{"name":"id","type":"string"},{"name":"invoice_id","type":["null","string"],"default":null},{"name":"branch","type":["null","string"],"default":null},{"name":"city","type":["null","string"],"default":null},{"name":"customer_type","type":["null","string"],"default":null},{"name":"gender","type":["null","string"],"default":null},{"name":"product_line","type":["null","string"],"default":null},{"name":"unit_price","type":["null","float"],"default":null},{"name":"quantity","type":["null","int"],"default":null},{"name":"tax_5_percent","type":["null","float"],"default":null},{"name":"total","type":["null","float"],"default":null},{"name":"date","type":["null","string"],"default":null},{"name":"time","type":["null","string"],"default":null},{"name":"payment","type":["null","string"],"default":null},{"name":"cogs","type":["null","float"],"default":null},{"name":"gross_margin_percentage","type":["null","float"],"default":null},{"name":"gross_income","type":["null","float"],"default":null},{"name":"rating","type":["null","float"],"default":null}]}'}, {compatibility: 'BACKWARD'}] (HTTP status code 409, SR code 409)"}
[2024-12-01T13:06:28.358+0000] {dag_test.py:69} INFO - Row data before serialization: {'invoice_id': '226-31-3081', 'branch': 'C', 'city': 'Naypyitaw', 'customer_type': 'Normal', 'gender': 'Female', 'product_line': 'Electronic accessories', 'unit_price': 15.28, 'quantity': 5, 'tax_5_percent': 3.82, 'total': 80.22, 'date': '3/8/2019', 'time': '10:29', 'payment': 'Cash', 'cogs': 76.4, 'gross_margin_percentage': 4.761904762, 'gross_income': 3.82, 'rating': 9.6, 'id': '292477d4-5c4f-4b9d-b874-c03f0784bd6b'}
[2024-12-01T13:06:28.372+0000] {dag_test.py:75} ERROR - Error producing message: KafkaError{code=_VALUE_SERIALIZATION,val=-161,str="Schema being registered is incompatible with an earlier schema for subject "test-topic-value", details: [{errorType:'NAME_MISMATCH', description:'The name of the schema has changed (path '/name')', additionalInfo:'expected: com.lambda.kafka.TestRecord'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: INT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {oldSchemaVersion: 2}, {oldSchema: '{"type":"record","name":"TestRecord","namespace":"com.lambda.kafka","fields":[{"name":"id","type":"string"},{"name":"invoice_id","type":["null","string"],"default":null},{"name":"branch","type":["null","string"],"default":null},{"name":"city","type":["null","string"],"default":null},{"name":"customer_type","type":["null","string"],"default":null},{"name":"gender","type":["null","string"],"default":null},{"name":"product_line","type":["null","string"],"default":null},{"name":"unit_price","type":["null","float"],"default":null},{"name":"quantity","type":["null","int"],"default":null},{"name":"tax_5_percent","type":["null","float"],"default":null},{"name":"total","type":["null","float"],"default":null},{"name":"date","type":["null","string"],"default":null},{"name":"time","type":["null","string"],"default":null},{"name":"payment","type":["null","string"],"default":null},{"name":"cogs","type":["null","float"],"default":null},{"name":"gross_margin_percentage","type":["null","float"],"default":null},{"name":"gross_income","type":["null","float"],"default":null},{"name":"rating","type":["null","float"],"default":null}]}'}, {compatibility: 'BACKWARD'}] (HTTP status code 409, SR code 409)"}
[2024-12-01T13:06:28.386+0000] {dag_test.py:69} INFO - Row data before serialization: {'invoice_id': '631-41-3108', 'branch': 'A', 'city': 'Yangon', 'customer_type': 'Normal', 'gender': 'Male', 'product_line': 'Home and lifestyle', 'unit_price': 46.33, 'quantity': 7, 'tax_5_percent': 16.2155, 'total': 340.5255, 'date': '3/3/2019', 'time': '13:23', 'payment': 'Credit card', 'cogs': 324.31, 'gross_margin_percentage': 4.761904762, 'gross_income': 16.2155, 'rating': 7.4, 'id': '9d5e7405-f0c5-4f4c-bafc-2f0ac16eae3e'}
[2024-12-01T13:06:28.399+0000] {dag_test.py:75} ERROR - Error producing message: KafkaError{code=_VALUE_SERIALIZATION,val=-161,str="Schema being registered is incompatible with an earlier schema for subject "test-topic-value", details: [{errorType:'NAME_MISMATCH', description:'The name of the schema has changed (path '/name')', additionalInfo:'expected: com.lambda.kafka.TestRecord'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: INT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {oldSchemaVersion: 2}, {oldSchema: '{"type":"record","name":"TestRecord","namespace":"com.lambda.kafka","fields":[{"name":"id","type":"string"},{"name":"invoice_id","type":["null","string"],"default":null},{"name":"branch","type":["null","string"],"default":null},{"name":"city","type":["null","string"],"default":null},{"name":"customer_type","type":["null","string"],"default":null},{"name":"gender","type":["null","string"],"default":null},{"name":"product_line","type":["null","string"],"default":null},{"name":"unit_price","type":["null","float"],"default":null},{"name":"quantity","type":["null","int"],"default":null},{"name":"tax_5_percent","type":["null","float"],"default":null},{"name":"total","type":["null","float"],"default":null},{"name":"date","type":["null","string"],"default":null},{"name":"time","type":["null","string"],"default":null},{"name":"payment","type":["null","string"],"default":null},{"name":"cogs","type":["null","float"],"default":null},{"name":"gross_margin_percentage","type":["null","float"],"default":null},{"name":"gross_income","type":["null","float"],"default":null},{"name":"rating","type":["null","float"],"default":null}]}'}, {compatibility: 'BACKWARD'}] (HTTP status code 409, SR code 409)"}
[2024-12-01T13:06:28.400+0000] {dag_test.py:69} INFO - Row data before serialization: {'invoice_id': '123-19-1176', 'branch': 'A', 'city': 'Yangon', 'customer_type': 'Member', 'gender': 'Male', 'product_line': 'Health and beauty', 'unit_price': 58.22, 'quantity': 8, 'tax_5_percent': 23.288, 'total': 489.048, 'date': '1/27/2019', 'time': '20:33', 'payment': 'Ewallet', 'cogs': 465.76, 'gross_margin_percentage': 4.761904762, 'gross_income': 23.288, 'rating': 8.4, 'id': '9fc645cb-9dd4-40a8-b77f-4f8c1516fc3d'}
[2024-12-01T13:06:28.412+0000] {dag_test.py:75} ERROR - Error producing message: KafkaError{code=_VALUE_SERIALIZATION,val=-161,str="Schema being registered is incompatible with an earlier schema for subject "test-topic-value", details: [{errorType:'NAME_MISMATCH', description:'The name of the schema has changed (path '/name')', additionalInfo:'expected: com.lambda.kafka.TestRecord'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: INT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {oldSchemaVersion: 2}, {oldSchema: '{"type":"record","name":"TestRecord","namespace":"com.lambda.kafka","fields":[{"name":"id","type":"string"},{"name":"invoice_id","type":["null","string"],"default":null},{"name":"branch","type":["null","string"],"default":null},{"name":"city","type":["null","string"],"default":null},{"name":"customer_type","type":["null","string"],"default":null},{"name":"gender","type":["null","string"],"default":null},{"name":"product_line","type":["null","string"],"default":null},{"name":"unit_price","type":["null","float"],"default":null},{"name":"quantity","type":["null","int"],"default":null},{"name":"tax_5_percent","type":["null","float"],"default":null},{"name":"total","type":["null","float"],"default":null},{"name":"date","type":["null","string"],"default":null},{"name":"time","type":["null","string"],"default":null},{"name":"payment","type":["null","string"],"default":null},{"name":"cogs","type":["null","float"],"default":null},{"name":"gross_margin_percentage","type":["null","float"],"default":null},{"name":"gross_income","type":["null","float"],"default":null},{"name":"rating","type":["null","float"],"default":null}]}'}, {compatibility: 'BACKWARD'}] (HTTP status code 409, SR code 409)"}
[2024-12-01T13:06:28.413+0000] {dag_test.py:69} INFO - Row data before serialization: {'invoice_id': '373-73-7910', 'branch': 'A', 'city': 'Yangon', 'customer_type': 'Normal', 'gender': 'Male', 'product_line': 'Sports and travel', 'unit_price': 86.31, 'quantity': 7, 'tax_5_percent': 30.2085, 'total': 634.3785, 'date': '2/8/2019', 'time': '10:37', 'payment': 'Ewallet', 'cogs': 604.17, 'gross_margin_percentage': 4.761904762, 'gross_income': 30.2085, 'rating': 5.3, 'id': 'e32271f8-47ce-4f00-a567-3a047d302210'}
[2024-12-01T13:06:28.428+0000] {dag_test.py:75} ERROR - Error producing message: KafkaError{code=_VALUE_SERIALIZATION,val=-161,str="Schema being registered is incompatible with an earlier schema for subject "test-topic-value", details: [{errorType:'NAME_MISMATCH', description:'The name of the schema has changed (path '/name')', additionalInfo:'expected: com.lambda.kafka.TestRecord'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: INT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {oldSchemaVersion: 2}, {oldSchema: '{"type":"record","name":"TestRecord","namespace":"com.lambda.kafka","fields":[{"name":"id","type":"string"},{"name":"invoice_id","type":["null","string"],"default":null},{"name":"branch","type":["null","string"],"default":null},{"name":"city","type":["null","string"],"default":null},{"name":"customer_type","type":["null","string"],"default":null},{"name":"gender","type":["null","string"],"default":null},{"name":"product_line","type":["null","string"],"default":null},{"name":"unit_price","type":["null","float"],"default":null},{"name":"quantity","type":["null","int"],"default":null},{"name":"tax_5_percent","type":["null","float"],"default":null},{"name":"total","type":["null","float"],"default":null},{"name":"date","type":["null","string"],"default":null},{"name":"time","type":["null","string"],"default":null},{"name":"payment","type":["null","string"],"default":null},{"name":"cogs","type":["null","float"],"default":null},{"name":"gross_margin_percentage","type":["null","float"],"default":null},{"name":"gross_income","type":["null","float"],"default":null},{"name":"rating","type":["null","float"],"default":null}]}'}, {compatibility: 'BACKWARD'}] (HTTP status code 409, SR code 409)"}
[2024-12-01T13:06:28.430+0000] {dag_test.py:69} INFO - Row data before serialization: {'invoice_id': '699-14-3026', 'branch': 'C', 'city': 'Naypyitaw', 'customer_type': 'Normal', 'gender': 'Male', 'product_line': 'Electronic accessories', 'unit_price': 85.39, 'quantity': 7, 'tax_5_percent': 29.8865, 'total': 627.6165, 'date': '3/25/2019', 'time': '18:30', 'payment': 'Ewallet', 'cogs': 597.73, 'gross_margin_percentage': 4.761904762, 'gross_income': 29.8865, 'rating': 4.1, 'id': 'e537ab36-ae7f-433c-836b-72ec4bceb555'}
[2024-12-01T13:06:28.441+0000] {dag_test.py:75} ERROR - Error producing message: KafkaError{code=_VALUE_SERIALIZATION,val=-161,str="Schema being registered is incompatible with an earlier schema for subject "test-topic-value", details: [{errorType:'NAME_MISMATCH', description:'The name of the schema has changed (path '/name')', additionalInfo:'expected: com.lambda.kafka.TestRecord'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: INT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {oldSchemaVersion: 2}, {oldSchema: '{"type":"record","name":"TestRecord","namespace":"com.lambda.kafka","fields":[{"name":"id","type":"string"},{"name":"invoice_id","type":["null","string"],"default":null},{"name":"branch","type":["null","string"],"default":null},{"name":"city","type":["null","string"],"default":null},{"name":"customer_type","type":["null","string"],"default":null},{"name":"gender","type":["null","string"],"default":null},{"name":"product_line","type":["null","string"],"default":null},{"name":"unit_price","type":["null","float"],"default":null},{"name":"quantity","type":["null","int"],"default":null},{"name":"tax_5_percent","type":["null","float"],"default":null},{"name":"total","type":["null","float"],"default":null},{"name":"date","type":["null","string"],"default":null},{"name":"time","type":["null","string"],"default":null},{"name":"payment","type":["null","string"],"default":null},{"name":"cogs","type":["null","float"],"default":null},{"name":"gross_margin_percentage","type":["null","float"],"default":null},{"name":"gross_income","type":["null","float"],"default":null},{"name":"rating","type":["null","float"],"default":null}]}'}, {compatibility: 'BACKWARD'}] (HTTP status code 409, SR code 409)"}
[2024-12-01T13:06:28.443+0000] {dag_test.py:69} INFO - Row data before serialization: {'invoice_id': '355-53-5943', 'branch': 'A', 'city': 'Yangon', 'customer_type': 'Member', 'gender': 'Female', 'product_line': 'Electronic accessories', 'unit_price': 68.84, 'quantity': 6, 'tax_5_percent': 20.652, 'total': 433.692, 'date': '2/25/2019', 'time': '14:36', 'payment': 'Ewallet', 'cogs': 413.04, 'gross_margin_percentage': 4.761904762, 'gross_income': 20.652, 'rating': 5.8, 'id': 'e8fb6de1-0f8d-491d-9fd0-6260077ea7e8'}
[2024-12-01T13:06:28.458+0000] {dag_test.py:75} ERROR - Error producing message: KafkaError{code=_VALUE_SERIALIZATION,val=-161,str="Schema being registered is incompatible with an earlier schema for subject "test-topic-value", details: [{errorType:'NAME_MISMATCH', description:'The name of the schema has changed (path '/name')', additionalInfo:'expected: com.lambda.kafka.TestRecord'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: INT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {oldSchemaVersion: 2}, {oldSchema: '{"type":"record","name":"TestRecord","namespace":"com.lambda.kafka","fields":[{"name":"id","type":"string"},{"name":"invoice_id","type":["null","string"],"default":null},{"name":"branch","type":["null","string"],"default":null},{"name":"city","type":["null","string"],"default":null},{"name":"customer_type","type":["null","string"],"default":null},{"name":"gender","type":["null","string"],"default":null},{"name":"product_line","type":["null","string"],"default":null},{"name":"unit_price","type":["null","float"],"default":null},{"name":"quantity","type":["null","int"],"default":null},{"name":"tax_5_percent","type":["null","float"],"default":null},{"name":"total","type":["null","float"],"default":null},{"name":"date","type":["null","string"],"default":null},{"name":"time","type":["null","string"],"default":null},{"name":"payment","type":["null","string"],"default":null},{"name":"cogs","type":["null","float"],"default":null},{"name":"gross_margin_percentage","type":["null","float"],"default":null},{"name":"gross_income","type":["null","float"],"default":null},{"name":"rating","type":["null","float"],"default":null}]}'}, {compatibility: 'BACKWARD'}] (HTTP status code 409, SR code 409)"}
[2024-12-01T13:06:28.460+0000] {dag_test.py:69} INFO - Row data before serialization: {'invoice_id': '315-22-5665', 'branch': 'C', 'city': 'Naypyitaw', 'customer_type': 'Normal', 'gender': 'Female', 'product_line': 'Home and lifestyle', 'unit_price': 73.56, 'quantity': 10, 'tax_5_percent': 36.78, 'total': 772.38, 'date': '2/24/2019', 'time': '11:38', 'payment': 'Ewallet', 'cogs': 735.6, 'gross_margin_percentage': 4.761904762, 'gross_income': 36.78, 'rating': 8.0, 'id': 'ae98b348-7259-442f-aa2b-5ed2046b1103'}
[2024-12-01T13:06:28.472+0000] {dag_test.py:75} ERROR - Error producing message: KafkaError{code=_VALUE_SERIALIZATION,val=-161,str="Schema being registered is incompatible with an earlier schema for subject "test-topic-value", details: [{errorType:'NAME_MISMATCH', description:'The name of the schema has changed (path '/name')', additionalInfo:'expected: com.lambda.kafka.TestRecord'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: INT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {oldSchemaVersion: 2}, {oldSchema: '{"type":"record","name":"TestRecord","namespace":"com.lambda.kafka","fields":[{"name":"id","type":"string"},{"name":"invoice_id","type":["null","string"],"default":null},{"name":"branch","type":["null","string"],"default":null},{"name":"city","type":["null","string"],"default":null},{"name":"customer_type","type":["null","string"],"default":null},{"name":"gender","type":["null","string"],"default":null},{"name":"product_line","type":["null","string"],"default":null},{"name":"unit_price","type":["null","float"],"default":null},{"name":"quantity","type":["null","int"],"default":null},{"name":"tax_5_percent","type":["null","float"],"default":null},{"name":"total","type":["null","float"],"default":null},{"name":"date","type":["null","string"],"default":null},{"name":"time","type":["null","string"],"default":null},{"name":"payment","type":["null","string"],"default":null},{"name":"cogs","type":["null","float"],"default":null},{"name":"gross_margin_percentage","type":["null","float"],"default":null},{"name":"gross_income","type":["null","float"],"default":null},{"name":"rating","type":["null","float"],"default":null}]}'}, {compatibility: 'BACKWARD'}] (HTTP status code 409, SR code 409)"}
[2024-12-01T13:06:28.474+0000] {dag_test.py:69} INFO - Row data before serialization: {'invoice_id': '665-32-9167', 'branch': 'A', 'city': 'Yangon', 'customer_type': 'Member', 'gender': 'Female', 'product_line': 'Health and beauty', 'unit_price': 36.26, 'quantity': 2, 'tax_5_percent': 3.626, 'total': 76.146, 'date': '1/10/2019', 'time': '17:15', 'payment': 'Credit card', 'cogs': 72.52, 'gross_margin_percentage': 4.761904762, 'gross_income': 3.626, 'rating': 7.2, 'id': '2368a16b-4c1f-4845-a723-48d26ebb2526'}
[2024-12-01T13:06:28.484+0000] {dag_test.py:75} ERROR - Error producing message: KafkaError{code=_VALUE_SERIALIZATION,val=-161,str="Schema being registered is incompatible with an earlier schema for subject "test-topic-value", details: [{errorType:'NAME_MISMATCH', description:'The name of the schema has changed (path '/name')', additionalInfo:'expected: com.lambda.kafka.TestRecord'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: INT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: STRING not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {errorType:'TYPE_MISMATCH', description:'The type (path '/') of a field in the new schema does not match with the old schema', additionalInfo:'reader type: FLOAT not compatible with writer type: NULL'}, {oldSchemaVersion: 2}, {oldSchema: '{"type":"record","name":"TestRecord","namespace":"com.lambda.kafka","fields":[{"name":"id","type":"string"},{"name":"invoice_id","type":["null","string"],"default":null},{"name":"branch","type":["null","string"],"default":null},{"name":"city","type":["null","string"],"default":null},{"name":"customer_type","type":["null","string"],"default":null},{"name":"gender","type":["null","string"],"default":null},{"name":"product_line","type":["null","string"],"default":null},{"name":"unit_price","type":["null","float"],"default":null},{"name":"quantity","type":["null","int"],"default":null},{"name":"tax_5_percent","type":["null","float"],"default":null},{"name":"total","type":["null","float"],"default":null},{"name":"date","type":["null","string"],"default":null},{"name":"time","type":["null","string"],"default":null},{"name":"payment","type":["null","string"],"default":null},{"name":"cogs","type":["null","float"],"default":null},{"name":"gross_margin_percentage","type":["null","float"],"default":null},{"name":"gross_income","type":["null","float"],"default":null},{"name":"rating","type":["null","float"],"default":null}]}'}, {compatibility: 'BACKWARD'}] (HTTP status code 409, SR code 409)"}
[2024-12-01T13:06:28.485+0000] {dag_test.py:79} INFO - All data has been published to topic test-topic.
[2024-12-01T13:06:28.488+0000] {python.py:240} INFO - Done. Returned value was: None
[2024-12-01T13:06:28.519+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-01T13:06:28.520+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=send_csv_to_kafka, task_id=send_csv_to_kafka, run_id=manual__2024-12-01T13:06:21.690931+00:00, execution_date=20241201T130621, start_date=20241201T130627, end_date=20241201T130628
[2024-12-01T13:06:28.642+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-01T13:06:28.690+0000] {taskinstance.py:3895} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-12-01T13:06:28.695+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
